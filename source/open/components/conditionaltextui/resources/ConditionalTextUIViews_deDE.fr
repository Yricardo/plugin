//========================================================================================
//  
//  $File: //depot/devtech/nevis/plugin/source/open/components/conditionaltextui/resources/ConditionalTextUIViews_deDE.fr $
//  
//  Owner: Michele Stutzman
//  
//  $Author: gmatthew $
//  
//  $DateTime: 2013/06/18 15:15:50 $
//  
//  $Revision: #1 $
//  
//  $Change: 853167 $
//  
//  Copyright 1997-2010 Adobe Systems Incorporated. All rights reserved.
//  
//  NOTICE:  Adobe permits you to use, modify, and distribute this file in accordance 
//  with the terms of the Adobe license agreement accompanying it.  If you have received
//  this file from a source other than Adobe, then your use, modification, or 
//  distribution of it requires the prior written permission of Adobe.
//  
//========================================================================================

#include "InterfaceColorDefines.h"
#include "AboutBoxID.h"
#include "ApplDefs.h"
#include "IconStyleDefs.h"
#include "EveInfo.fh"

#ifdef __ODFRC__

/***********************************************************************/

resource ConditionalTextUIPanelWidget(kConditionalTextUIPanelRsrcID + index_deDE)
{
	__FILE__, __LINE__,
	kConditionalTextUIPanelWidgetID, kPMRsrcID_None,		// WidgetId, RsrcId
	kBindAll,
	Frame(0,0,207,230),					// Frame
	kTrue, kTrue,						// Visible, Enabled
	kTrue,								// EraseBeforeDrawing
	kInterfacePaletteFill,				// Erase to color
	"#CondTextUI_PanelName",			// Panel name
	{
		GenericPanelWidget
		(
			kConditionalTextUIPanelListWidgetId, kPMRsrcID_None,
			kBindAll,
			Frame(0,0,207,230)		// Frame
			kTrue, kTrue,
			"",
			{	
				GenericPanelWithBorderWidget
				(
					kConditionalTextUIPanelListWidgetId, kPMRsrcID_None,
					kBindAll,
					Frame(2,2,208,161)		// Frame
					kTrue, kTrue,
					"",
					{	
						ConditionTagListTreeViewWidget
						(
							kConditionTagListTreeViewWidgetID, kPMRsrcID_None,// WidgetId, RsrcId
							kBindAll,
							Frame(0,2,206,159)			// Frame
							kTrue, kTrue,				// Visible, Enabled
							kFalse,						// EraseBeforeDraw
							kInterfacePaletteFill,		// Erase to color,
							"",							// Name
							kDisplayRootNode,			// Options
							kFalse,						// Use H Scroll bar
							kTrue,						// Use V scroll bar
							20,							// Vertical Scroll Button Increment
							20,							// Vertical Thumb Scroll Increment
							0,							// Horizontal Scroll Button Increment - Not Used
							0,							// Horizontal Thumb Scroll Increment - Not Used
							2,							// Items selectable, 0 = No Selection, 1 = Single Selection, 2 = Multiple Selection
							kTrue,						// Allow children from multiple parents to be selected
							kTrue,						// Allow discontiguous selection
							{
							},
							{{ 
								IID_IOBSERVER,
								IID_ISELECTIONOBSERVER,
							}}
						),
					}
				),
				
				GenericPanelWidget
				(
					kConditionalTextUIPanelIndicatorsAreaWidgetId, kPMRsrcID_None,
					kBindBottom | kBindLeft | kBindRight,
					Frame(2,163,207,185)		// Frame
					kTrue, kTrue,
					"",
					{
						StaticTextWidget
						(
							0, kSysStaticTextPMRsrcId,	// WidgetId, RsrcId
							kBindLeft,				// Frame binding
		#ifdef MACINTOSH
							Frame(2,2,65,22)									// Frame
		#else
							Frame(2,2,60,18)									// Frame
		#endif
							kTrue, kTrue, kAlignRight,							// Visible, Enabled
							kDontEllipsize,	kTrue,								// Ellipsize style, Convert ampersands
							"#CondTextUI_ShowIndicatorsDD",						// Text
							kShowConditionIndicatorsWidgetId,
						),
						
						ShowConditionIndicatorsDropDownWidget
						(
							kShowConditionIndicatorsWidgetId,			// WidgetId
							kSysDropDownPMRsrcId,						// RsrcId
							kBindLeft | kBindRight,
		#ifdef MACINTOSH
							Frame(68,2,193,22)					// Frame
		#else
							Frame(63,2,190,18)					// Frame
		#endif
							kTrue,										// Visible
							kTrue,										// Enabled
							{{
								"#CondTextUI_ShowIndicators",
								"#CondTextUI_ShowAndPrintIndicators",
								"#CondTextUI_HideIndicators"
							}}
						),
					}
				)
						
				GenericPanelWidget
				(
					kConditionalTextUIPanelSetsAreaWidgetId,	// WidgetId
					0,0,						// RsrcId
					kBindBottom | kBindRight | kBindLeft,				// Frame binding
					Frame(2,186,207,211)		// Frame
					kTrue,						// Visible
					kTrue,	
					"",					// Enabled
					{
						SeparatorWidget
						(
							kConditionUISeperator1WidgetID, kSysGenericSeparatorPMRsrcId,	// WidgetId, RsrcId
							kBindLeft | kBindRight,
							Frame(2,0,207,1)						// Frame
							kTrue, kTrue,								// Visible, Enabled
						),
						
						StaticTextWidget
						(
							kConditionSetsDropDownLabelWidgetID, kSysStaticTextPMRsrcId,	// WidgetId, RsrcId
							kBindLeft,				// Frame binding
		#ifdef MACINTOSH
							Frame(2,5,65,25)									// Frame
		#else
							Frame(2,5,60,21)									// Frame
		#endif
							kTrue, kTrue, kAlignRight,							// Visible, Enabled
							kDontEllipsize,	kTrue,								// Ellipsize style, Convert ampersands
							"#ConditionSetLabel",								// Text
							kConditionSetsDropDownWidgetID,
						),
				
						ConditionSetsDropDownWidget
						(
							kConditionSetsDropDownWidgetID,			// WidgetId
							kSysDropDownPMRsrcId,				// RsrcId
							kBindLeft | kBindRight,
		#ifdef MACINTOSH
							Frame(68,5,193,25)					// Frame
		#else
							Frame(63,5,190,21)					// Frame
		#endif
							kTrue,								// Visible
							kTrue,								// Enabled
							{{
								"#ConditionSetNewSet"
							}}
						),
					}
				)
						
				// ----- The control strip ----- //
				GenericPanelWidget
				(
					kConditionalTextUIPanelControlStripWidgetId, kPMRsrcID_None,
					kBindBottom | kBindLeft | kBindRight,
					Frame(0,212,207,230)		// Frame
					kTrue, kTrue,
					"",
					{									
						SeparatorWidget
						(
							kConditionUISeperator2WidgetID, kSysGenericSeparatorPMRsrcId,	// WidgetId, RsrcId
							kBindLeft | kBindRight,
							Frame(2,0,207,1)							// Frame
							kTrue, kTrue,								// Visible, Enabled
						),
						ConditionStatusTextWidget
						(
							kConditionalTextUIStatusWidgetID, kSysStaticTextPMRsrcId,	// WidgetId, RsrcId
							kBindLeft | kBindRight,				// Frame binding
							Frame(4,4,130,18)									// Frame
							kTrue, kTrue, kAlignLeft,							// Visible, Enabled
							kEllipsizeEnd,	kTrue,								// Ellipsize style, Convert ampersands
							"",													// Text
							0
						),
						NewConditionTagButtonWidget
						(
							kNewConditionTagButtonWidgetID, 		// WidgetId
							kIconNew, kApplicationRsrcPluginID,		// RsrcId
							kBindRight,
							Frame(192 - 2*kPanelIconWidth,1,192 - kPanelIconWidth,kPanelIconHeight+1)					// Frame
							kTrue, kTrue,							// Visible, Enabled
							kADBEIconSuiteButtonType,
						),
						DeleteConditionTagButtonWidget
						(
							kDeleteConditionTagButtonWidgetID,		// WidgetId 
							kIconDelete, kApplicationRsrcPluginID,	// RsrcId
							kBindRight,
							Frame(193 - kPanelIconWidth,1,193,kPanelIconHeight+1)					// Frame
							kTrue, kTrue,							// Visible, Enabled
							kADBEIconSuiteButtonType,
						),
					}
				),
			}
		),
	},
	"#CondTextUI_PanelMenu", // panel menu name	
}

#endif	// __ODFRC__


